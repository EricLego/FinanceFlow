"""fixing variable column sizes to reduce truncation issues

Revision ID: fc775834f786
Revises: be9c586e173e
Create Date: 2025-03-04 08:33:09.911626

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mssql

# revision identifiers, used by Alembic.
revision = 'fc775834f786'
down_revision = 'be9c586e173e'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
#     op.drop_table('Access_Tokens')
#     op.drop_table('refreshtokens')
#     op.drop_table('Error_Messages')
#     op.drop_table('accesstokens')
#     op.drop_table('Refresh_Tokens')
#     op.drop_table('sysdiagrams')
    with op.batch_alter_table('Accounts', schema=None) as batch_op:
        batch_op.alter_column('account_name',
               existing_type=sa.VARCHAR(length=16, collation='SQL_Latin1_General_CP1_CI_AS'),
               type_=sa.String(length=32),
               existing_nullable=False)
        batch_op.alter_column('category',
               existing_type=sa.VARCHAR(length=16, collation='SQL_Latin1_General_CP1_CI_AS'),
               type_=sa.String(length=32),
               existing_nullable=False)
        batch_op.alter_column('subcategory',
               existing_type=sa.VARCHAR(length=16, collation='SQL_Latin1_General_CP1_CI_AS'),
               type_=sa.String(length=32),
               existing_nullable=False)

    with op.batch_alter_table('Security_Questions', schema=None) as batch_op:
        batch_op.alter_column('question',
               existing_type=sa.VARCHAR(length=32, collation='SQL_Latin1_General_CP1_CI_AS'),
               type_=sa.String(length=64),
               existing_nullable=False)
        batch_op.alter_column('answer',
               existing_type=sa.VARCHAR(length=32, collation='SQL_Latin1_General_CP1_CI_AS'),
               type_=sa.String(length=64),
               existing_nullable=False)

    with op.batch_alter_table('Transactions', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.Integer(), nullable=False))
        batch_op.create_foreign_key(None, 'Users', ['user_id'], ['user_id'])

    with op.batch_alter_table('Users', schema=None) as batch_op:
        batch_op.alter_column('first_name',
               existing_type=sa.VARCHAR(length=16, collation='SQL_Latin1_General_CP1_CI_AS'),
               type_=sa.String(length=32),
               existing_nullable=False)
        batch_op.alter_column('last_name',
               existing_type=sa.VARCHAR(length=16, collation='SQL_Latin1_General_CP1_CI_AS'),
               type_=sa.String(length=32),
               existing_nullable=False)
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(length=16, collation='SQL_Latin1_General_CP1_CI_AS'),
               type_=sa.String(length=64),
               existing_nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('Users', schema=None) as batch_op:
        batch_op.alter_column('email',
               existing_type=sa.String(length=64),
               type_=sa.VARCHAR(length=16, collation='SQL_Latin1_General_CP1_CI_AS'),
               existing_nullable=False)
        batch_op.alter_column('last_name',
               existing_type=sa.String(length=32),
               type_=sa.VARCHAR(length=16, collation='SQL_Latin1_General_CP1_CI_AS'),
               existing_nullable=False)
        batch_op.alter_column('first_name',
               existing_type=sa.String(length=32),
               type_=sa.VARCHAR(length=16, collation='SQL_Latin1_General_CP1_CI_AS'),
               existing_nullable=False)

    with op.batch_alter_table('Transactions', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('user_id')

    with op.batch_alter_table('Security_Questions', schema=None) as batch_op:
        batch_op.alter_column('answer',
               existing_type=sa.String(length=64),
               type_=sa.VARCHAR(length=32, collation='SQL_Latin1_General_CP1_CI_AS'),
               existing_nullable=False)
        batch_op.alter_column('question',
               existing_type=sa.String(length=64),
               type_=sa.VARCHAR(length=32, collation='SQL_Latin1_General_CP1_CI_AS'),
               existing_nullable=False)

    with op.batch_alter_table('Accounts', schema=None) as batch_op:
        batch_op.alter_column('subcategory',
               existing_type=sa.String(length=32),
               type_=sa.VARCHAR(length=16, collation='SQL_Latin1_General_CP1_CI_AS'),
               existing_nullable=False)
        batch_op.alter_column('category',
               existing_type=sa.String(length=32),
               type_=sa.VARCHAR(length=16, collation='SQL_Latin1_General_CP1_CI_AS'),
               existing_nullable=False)
        batch_op.alter_column('account_name',
               existing_type=sa.String(length=32),
               type_=sa.VARCHAR(length=16, collation='SQL_Latin1_General_CP1_CI_AS'),
               existing_nullable=False)

    op.create_table('sysdiagrams',
    sa.Column('name', sa.NVARCHAR(length=128, collation='SQL_Latin1_General_CP1_CI_AS'), autoincrement=False, nullable=False),
    sa.Column('principal_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('diagram_id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1), autoincrement=True, nullable=False),
    sa.Column('version', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('definition', mssql.VARBINARY(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('diagram_id', name='PK__sysdiagr__C2B05B61D797F7C4')
    )
    op.create_table('Refresh_Tokens',
    sa.Column('token_id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('token_hash', sa.NCHAR(length=255, collation='SQL_Latin1_General_CP1_CI_AS'), autoincrement=False, nullable=False),
    sa.Column('creation_time', sa.DATETIME(), autoincrement=False, nullable=False),
    sa.Column('expiry_time', sa.DATETIME(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['Users.user_id'], name='User_Refresh_Tokens'),
    sa.PrimaryKeyConstraint('token_id', name='PK_Refresh_Tokens')
    )
    op.create_table('accesstokens',
    sa.Column('token_id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('token_hash', sa.VARCHAR(length=255, collation='SQL_Latin1_General_CP1_CI_AS'), autoincrement=False, nullable=False),
    sa.Column('creation_time', sa.DATETIME(), autoincrement=False, nullable=False),
    sa.Column('expiry_time', sa.DATETIME(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['Users.user_id'], name='FK__accesstok__user___00DF2177'),
    sa.PrimaryKeyConstraint('token_id', name='PK__accessto__CB3C9E17CFF2C57D')
    )
    op.create_table('Error_Messages',
    sa.Column('error_code', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('message', sa.TEXT(length=2147483647, collation='SQL_Latin1_General_CP1_CI_AS'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('error_code', name='PK_Error_Messages')
    )
    op.create_table('refreshtokens',
    sa.Column('token_id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('token_hash', sa.VARCHAR(length=255, collation='SQL_Latin1_General_CP1_CI_AS'), autoincrement=False, nullable=False),
    sa.Column('creation_time', sa.DATETIME(), autoincrement=False, nullable=False),
    sa.Column('expiry_time', sa.DATETIME(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['Users.user_id'], name='FK__refreshto__user___03BB8E22'),
    sa.PrimaryKeyConstraint('token_id', name='PK__refresht__CB3C9E17CE3F5F90')
    )
    op.create_table('Access_Tokens',
    sa.Column('token_id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('token_hash', sa.NCHAR(length=255, collation='SQL_Latin1_General_CP1_CI_AS'), autoincrement=False, nullable=False),
    sa.Column('creation_time', sa.DATETIME(), autoincrement=False, nullable=False),
    sa.Column('expiry_time', sa.DATETIME(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['Users.user_id'], name='User_Access_Tokens'),
    sa.PrimaryKeyConstraint('token_id', name='PK_Tokens')
    )
    # ### end Alembic commands ###
